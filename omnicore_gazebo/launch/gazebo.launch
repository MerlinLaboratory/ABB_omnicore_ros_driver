<?xml version="1.0"?>
<launch>
  <!-- MoveIt options -->
  <arg name="pipeline" default="ompl" doc="Planning pipeline to use with MoveIt"/>

  <!-- Gazebo options -->
  <arg name="robot" default="gofa_5" doc="Which robot to load"/>
  <arg name="robot_family" default="gofa" doc="Which robot to load"/>


  <arg name="gazebo_gui" default="true" doc="Start Gazebo GUI"/>
  <arg name="paused" default="false" doc="Start Gazebo paused"/>
  <arg name="world_name" default="worlds/empty.world" doc="Gazebo world file"/>
  <arg name="world_pose" default="-x 0 -y 0 -z 0 -R 0 -P 0 -Y 0" doc="Pose to spawn the robot at"/>
  <arg name="initial_joint_positions" default=" -J J1 0 -J J2 0 -J J3 0 -J J4 0 -J J5 0 -J J6 0" doc="Initial joint configuration of the robot"/>
  <arg name="hardware_interface" default="hardware_interface/VelocityJointInterface"/>
  <arg name="base_translation" default="0" />
  <arg name="base_orientation" default="0" />
  <arg name="controllers" default="VelocityControllers_JointTrajectoryController" doc="Controllers that are activated by default."/>
  <arg name="stopped_controllers" default="VelocityControllers_JointGroupVelocityController" doc="Controllers that are initally loaded, but not started."/>


  <arg name="gripper_interface" default="" if="$(eval arg('robot_family') == 'gofa')"/>
  <arg name="gripper_interface" default="hardware_interface/EffortJointInterface" if="$(eval arg('robot_family') == 'yumi_single_arm')"/>

  <!-- Launch Gazebo and spawn the robot -->
  <!-- Start Gazebo paused to allow the controllers to pickup the initial pose -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" pass_all_args="true">
    <arg name="paused" value="true"/>
    <arg name="world_name" value="$(arg world_name)"/>
  </include>

  <!-- Set the robot urdf on the parameter server -->
  <param name="robot_description" command="xacro robot:=$(arg robot) hardware_interface:=$(arg hardware_interface) gripper_interface:=$(arg gripper_interface) base_translation:=$(arg base_translation) base_orientation:=$(arg base_orientation) '$(find omnicore_gazebo)/urdf/gofa.xacro'" if="$(eval arg('robot_family') == 'gofa')" />
  <param name="robot_description" command="xacro hardware_interface:=$(arg hardware_interface) gripper_interface:=$(arg gripper_interface) base_translation:=$(arg base_translation) base_orientation:=$(arg base_orientation) '$(find omnicore_gazebo)/urdf/gofa.xacro'" if="$(eval arg('robot_family') == 'yumi_single_arm')" />

  <!-- Set ros_control with robot description -->
  <include file="$(find omnicore_ros_control)/launch/omnicore_control.launch" pass_all_args="true">
    <arg name="robot"               value="$(arg robot)"/>
    <arg name="robot_family"        value="$(arg robot_family)"/>
    <arg name="simulation"          value="true"/>
    <arg name="controllers"         value="$(arg controllers)"/>
    <arg name="stopped_controllers" value="$(arg stopped_controllers)"/>
  </include>

  <!-- Unpause the simulation after loading the robot model -->
  <arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')" />

  <!-- Spawn the robot in Gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot $(arg unpause) $(arg world_pose) $(arg initial_joint_positions)" respawn="false" output="screen" />

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

  <arg name="moveit_config_path" default="$(find gofa_5_moveit_config)/launch/demo.launch" if="$(eval arg('robot') == 'gofa_5')"/>
  <arg name="moveit_config_path" default="$(find gofa_10_moveit_config)/launch/demo.launch" if="$(eval arg('robot') == 'gofa_10')"/>
  <arg name="moveit_config_path" default="$(find gofa_12_moveit_config)/launch/demo.launch" if="$(eval arg('robot') == 'gofa_12')"/>
  <arg name="moveit_config_path" default="$(find yumi_single_arm_moveit_config)/launch/demo.launch" if="$(eval arg('robot') == 'yumi_single_arm')"/>
  
  <!-- Launch MoveIt -->
  <include file="$(arg moveit_config_path)" pass_all_args="true">
    <arg name="pipeline"                                value="$(arg pipeline)" /> 
    <arg name="debug"                                   value="false" />
    <arg name="load_robot_description"                  value="false"/>             
    <arg name="moveit_controller_manager"               value="simple" />
    <arg name="use_rviz"                                value="true" />
  </include>

</launch>
